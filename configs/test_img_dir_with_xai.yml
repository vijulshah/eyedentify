seed: 42

data_path: "data/eyes/right_eyes"
selected_participants: ['4'] # enter ids as string values
selected_target: "right_pupil"

img_configs:
  img_size: [32, 64]
  # image_path: "data/EyeDentify/eyes/right_eyes/6/1/frame_80.png"
  # target_value: 2.6594

# dataloader_configs:
#   dataloader_path: "data/EyeDentify/eyes/left_eyes/test_dataloader.pth"
#   selected_batch_index: 12
#   sample_index_in_batch: 110
  
model_configs:
  model_path: "scripts/mlruns/fold1/0/ResNet18_right_eyes/artifacts/trained_model/best_model.pt"
  registered_model_name: "ResNet18"
  num_classes: 1

loss_function_configs:
  loss_function_name: "L1Loss"
  # reduction: "mean"
  # delta: 0.10

test_configs:
  eval_metrics: []
  # results_path: "inference_n_interpretation/log_results"
  viz_methods: ["line"]

xai_configs:
  # viz_path: "inference_n_interpretation/logs_xai_vizualizations"
  methods: [
    # "IntegratedGradients",
    # "Saliency",
    # "InputXGradient", 
    # "GuidedBackprop",
    # "Deconvolution",
    "CAM",
    # "ScoreCAM",
    # "SSCAM",
    # "ISCAM",
    # "GradCAM",
    # "GradCAMpp",
    # "SmoothGradCAMpp",
    # "XGradCAM",
    # "LayerCAM",
  ] 
# any from: ["CAM", "ScoreCAM", "SSCAM", "ISCAM", "GradCAM", "GradCAMpp", "SmoothGradCAMpp", "XGradCAM", "LayerCAM"] # see here: https://frgfm.github.io/torch-cam/methods.html
  # OR
  # methods: ["InputXGradient"] # any from: ["InputXGradient", "Saliency"] # see here: https://captum.ai/api/
  # OR
  # methods: ["attention_visualization"] # valid only for transformer based models else it will be skipped
